package com.tzh.wallpaper.dao.dto;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WIDGET_DTO".
*/
public class WidgetDtoDao extends AbstractDao<WidgetDto, Long> {

    public static final String TABLENAME = "WIDGET_DTO";

    /**
     * Properties of entity WidgetDto.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property WidgetId = new Property(2, String.class, "widgetId", false, "WIDGET_ID");
        public final static Property Text1 = new Property(3, String.class, "text1", false, "TEXT1");
        public final static Property Text2 = new Property(4, String.class, "text2", false, "TEXT2");
        public final static Property Text3 = new Property(5, String.class, "text3", false, "TEXT3");
        public final static Property Text4 = new Property(6, String.class, "text4", false, "TEXT4");
        public final static Property Text5 = new Property(7, String.class, "text5", false, "TEXT5");
        public final static Property Text6 = new Property(8, String.class, "text6", false, "TEXT6");
        public final static Property Text7 = new Property(9, String.class, "text7", false, "TEXT7");
        public final static Property Text8 = new Property(10, String.class, "text8", false, "TEXT8");
        public final static Property Text9 = new Property(11, String.class, "text9", false, "TEXT9");
        public final static Property Text10 = new Property(12, String.class, "text10", false, "TEXT10");
        public final static Property Num1 = new Property(13, int.class, "num1", false, "NUM1");
        public final static Property Num2 = new Property(14, int.class, "num2", false, "NUM2");
        public final static Property Num3 = new Property(15, int.class, "num3", false, "NUM3");
        public final static Property Num4 = new Property(16, int.class, "num4", false, "NUM4");
        public final static Property Num5 = new Property(17, int.class, "num5", false, "NUM5");
        public final static Property Num6 = new Property(18, int.class, "num6", false, "NUM6");
        public final static Property Num7 = new Property(19, int.class, "num7", false, "NUM7");
        public final static Property Num8 = new Property(20, int.class, "num8", false, "NUM8");
        public final static Property Num9 = new Property(21, int.class, "num9", false, "NUM9");
        public final static Property Num10 = new Property(22, int.class, "num10", false, "NUM10");
    }


    public WidgetDtoDao(DaoConfig config) {
        super(config);
    }
    
    public WidgetDtoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WIDGET_DTO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"WIDGET_ID\" TEXT," + // 2: widgetId
                "\"TEXT1\" TEXT," + // 3: text1
                "\"TEXT2\" TEXT," + // 4: text2
                "\"TEXT3\" TEXT," + // 5: text3
                "\"TEXT4\" TEXT," + // 6: text4
                "\"TEXT5\" TEXT," + // 7: text5
                "\"TEXT6\" TEXT," + // 8: text6
                "\"TEXT7\" TEXT," + // 9: text7
                "\"TEXT8\" TEXT," + // 10: text8
                "\"TEXT9\" TEXT," + // 11: text9
                "\"TEXT10\" TEXT," + // 12: text10
                "\"NUM1\" INTEGER NOT NULL ," + // 13: num1
                "\"NUM2\" INTEGER NOT NULL ," + // 14: num2
                "\"NUM3\" INTEGER NOT NULL ," + // 15: num3
                "\"NUM4\" INTEGER NOT NULL ," + // 16: num4
                "\"NUM5\" INTEGER NOT NULL ," + // 17: num5
                "\"NUM6\" INTEGER NOT NULL ," + // 18: num6
                "\"NUM7\" INTEGER NOT NULL ," + // 19: num7
                "\"NUM8\" INTEGER NOT NULL ," + // 20: num8
                "\"NUM9\" INTEGER NOT NULL ," + // 21: num9
                "\"NUM10\" INTEGER NOT NULL );"); // 22: num10
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WIDGET_DTO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, WidgetDto entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String widgetId = entity.getWidgetId();
        if (widgetId != null) {
            stmt.bindString(3, widgetId);
        }
 
        String text1 = entity.getText1();
        if (text1 != null) {
            stmt.bindString(4, text1);
        }
 
        String text2 = entity.getText2();
        if (text2 != null) {
            stmt.bindString(5, text2);
        }
 
        String text3 = entity.getText3();
        if (text3 != null) {
            stmt.bindString(6, text3);
        }
 
        String text4 = entity.getText4();
        if (text4 != null) {
            stmt.bindString(7, text4);
        }
 
        String text5 = entity.getText5();
        if (text5 != null) {
            stmt.bindString(8, text5);
        }
 
        String text6 = entity.getText6();
        if (text6 != null) {
            stmt.bindString(9, text6);
        }
 
        String text7 = entity.getText7();
        if (text7 != null) {
            stmt.bindString(10, text7);
        }
 
        String text8 = entity.getText8();
        if (text8 != null) {
            stmt.bindString(11, text8);
        }
 
        String text9 = entity.getText9();
        if (text9 != null) {
            stmt.bindString(12, text9);
        }
 
        String text10 = entity.getText10();
        if (text10 != null) {
            stmt.bindString(13, text10);
        }
        stmt.bindLong(14, entity.getNum1());
        stmt.bindLong(15, entity.getNum2());
        stmt.bindLong(16, entity.getNum3());
        stmt.bindLong(17, entity.getNum4());
        stmt.bindLong(18, entity.getNum5());
        stmt.bindLong(19, entity.getNum6());
        stmt.bindLong(20, entity.getNum7());
        stmt.bindLong(21, entity.getNum8());
        stmt.bindLong(22, entity.getNum9());
        stmt.bindLong(23, entity.getNum10());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, WidgetDto entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String widgetId = entity.getWidgetId();
        if (widgetId != null) {
            stmt.bindString(3, widgetId);
        }
 
        String text1 = entity.getText1();
        if (text1 != null) {
            stmt.bindString(4, text1);
        }
 
        String text2 = entity.getText2();
        if (text2 != null) {
            stmt.bindString(5, text2);
        }
 
        String text3 = entity.getText3();
        if (text3 != null) {
            stmt.bindString(6, text3);
        }
 
        String text4 = entity.getText4();
        if (text4 != null) {
            stmt.bindString(7, text4);
        }
 
        String text5 = entity.getText5();
        if (text5 != null) {
            stmt.bindString(8, text5);
        }
 
        String text6 = entity.getText6();
        if (text6 != null) {
            stmt.bindString(9, text6);
        }
 
        String text7 = entity.getText7();
        if (text7 != null) {
            stmt.bindString(10, text7);
        }
 
        String text8 = entity.getText8();
        if (text8 != null) {
            stmt.bindString(11, text8);
        }
 
        String text9 = entity.getText9();
        if (text9 != null) {
            stmt.bindString(12, text9);
        }
 
        String text10 = entity.getText10();
        if (text10 != null) {
            stmt.bindString(13, text10);
        }
        stmt.bindLong(14, entity.getNum1());
        stmt.bindLong(15, entity.getNum2());
        stmt.bindLong(16, entity.getNum3());
        stmt.bindLong(17, entity.getNum4());
        stmt.bindLong(18, entity.getNum5());
        stmt.bindLong(19, entity.getNum6());
        stmt.bindLong(20, entity.getNum7());
        stmt.bindLong(21, entity.getNum8());
        stmt.bindLong(22, entity.getNum9());
        stmt.bindLong(23, entity.getNum10());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public WidgetDto readEntity(Cursor cursor, int offset) {
        WidgetDto entity = new WidgetDto( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // widgetId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // text1
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // text2
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // text3
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // text4
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // text5
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // text6
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // text7
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // text8
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // text9
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // text10
            cursor.getInt(offset + 13), // num1
            cursor.getInt(offset + 14), // num2
            cursor.getInt(offset + 15), // num3
            cursor.getInt(offset + 16), // num4
            cursor.getInt(offset + 17), // num5
            cursor.getInt(offset + 18), // num6
            cursor.getInt(offset + 19), // num7
            cursor.getInt(offset + 20), // num8
            cursor.getInt(offset + 21), // num9
            cursor.getInt(offset + 22) // num10
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, WidgetDto entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setWidgetId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setText1(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setText2(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setText3(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setText4(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setText5(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setText6(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setText7(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setText8(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setText9(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setText10(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setNum1(cursor.getInt(offset + 13));
        entity.setNum2(cursor.getInt(offset + 14));
        entity.setNum3(cursor.getInt(offset + 15));
        entity.setNum4(cursor.getInt(offset + 16));
        entity.setNum5(cursor.getInt(offset + 17));
        entity.setNum6(cursor.getInt(offset + 18));
        entity.setNum7(cursor.getInt(offset + 19));
        entity.setNum8(cursor.getInt(offset + 20));
        entity.setNum9(cursor.getInt(offset + 21));
        entity.setNum10(cursor.getInt(offset + 22));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(WidgetDto entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(WidgetDto entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(WidgetDto entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
